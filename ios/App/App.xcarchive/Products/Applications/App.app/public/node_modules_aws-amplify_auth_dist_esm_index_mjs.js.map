{"version":3,"file":"node_modules_aws-amplify_auth_dist_esm_index_mjs.js","mappings":"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","sources":["./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/confirmSignUp.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/updateUserAttribute.mjs","./node_modules/@aws-amplify/auth/dist/esm/client/apis/listWebAuthnCredentials.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/fetchDevices.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/resetPassword.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/rememberDevice.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createListDevicesClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/sendUserAttributeVerificationCode.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/verifyTOTPSetup.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createForgetDeviceClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createListWebAuthnCredentialsClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/apis/listWebAuthnCredentials.mjs","./node_modules/@aws-amplify/auth/dist/esm/client/apis/associateWebAuthnCredential.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/updateMFAPreference.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserAttributesClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createResendConfirmationCodeClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/forgetDevice.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/updateUserAttributes.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateUserAttributesClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createChangePasswordClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createSetUserMFAPreferenceClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/client/utils/passkey/registerPasskey.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/fetchMFAPreference.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateDeviceStatusClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createCompleteWebAuthnRegistrationClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmForgotPasswordClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/client/apis/deleteWebAuthnCredential.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserAttributeVerificationCodeClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmSignUpClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/confirmUserAttribute.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/apis/deleteWebAuthnCredential.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/setUpTOTP.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/resendSignUpCode.mjs","./node_modules/@aws-amplify/auth/dist/esm/index.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/deleteUserAttributes.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createStartWebAuthnRegistrationClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createVerifyUserAttributeClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/confirmResetPassword.mjs","./node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/updatePassword.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteWebAuthnCredentialClient.mjs","./node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createForgotPasswordClient.mjs"],"sourcesContent":["import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction, HubInternal } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createConfirmSignUpClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmSignUpClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { autoSignInStore } from '../../../client/utils/store/autoSignInStore.mjs';\nimport '../../../client/utils/store/signInStore.mjs';\nimport { resetAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Confirms a new user account.\n *\n * @param input -  The ConfirmSignUpInput object.\n * @returns ConfirmSignUpOutput\n * @throws -{@link ConfirmSignUpException }\n * Thrown due to an invalid confirmation code.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty confirmation code\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmSignUp(input) {\n    const { username, confirmationCode, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = authConfig;\n    const clientMetadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptyConfirmSignUpUsername);\n    assertValidationError(!!confirmationCode, AuthValidationErrorCode.EmptyConfirmSignUpCode);\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const confirmSignUpClient = createConfirmSignUpClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { Session: session } = await confirmSignUpClient({\n        region: getRegionFromUserPoolId(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignUp),\n    }, {\n        Username: username,\n        ConfirmationCode: confirmationCode,\n        ClientMetadata: clientMetadata,\n        ForceAliasCreation: options?.forceAliasCreation,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData,\n    });\n    return new Promise((resolve, reject) => {\n        try {\n            const signUpOut = {\n                isSignUpComplete: true,\n                nextStep: {\n                    signUpStep: 'DONE',\n                },\n            };\n            const autoSignInStoreState = autoSignInStore.getState();\n            if (!autoSignInStoreState.active ||\n                autoSignInStoreState.username !== username) {\n                resolve(signUpOut);\n                resetAutoSignIn();\n                return;\n            }\n            autoSignInStore.dispatch({ type: 'SET_SESSION', value: session });\n            const stopListener = HubInternal.listen('auth-internal', ({ payload }) => {\n                switch (payload.event) {\n                    case 'autoSignIn':\n                        resolve({\n                            isSignUpComplete: true,\n                            nextStep: {\n                                signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n                            },\n                        });\n                        stopListener();\n                }\n            });\n            HubInternal.dispatch('auth-internal', {\n                event: 'confirmSignUp',\n                data: signUpOut,\n            });\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\n\nexport { confirmSignUp };\n","import { updateUserAttributes } from './updateUserAttributes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates user's attribute while authenticated.\n *\n * @param input - The UpdateUserAttributeInput object\n * @returns UpdateUserAttributeOutput\n * @throws - {@link UpdateUserAttributesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst updateUserAttribute = async (input) => {\n    const { userAttribute: { attributeKey, value }, options, } = input;\n    const output = await updateUserAttributes({\n        userAttributes: { [attributeKey]: value },\n        options,\n    });\n    return Object.values(output)[0];\n};\n\nexport { updateUserAttribute };\n","import { Amplify } from '@aws-amplify/core';\nimport { listWebAuthnCredentials as listWebAuthnCredentials$1 } from '../../foundation/apis/listWebAuthnCredentials.mjs';\nimport '@aws-amplify/core/internals/utils';\nimport '../../providers/cognito/utils/types.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../common/AuthErrorStrings.mjs';\nimport '../../errors/types/validation.mjs';\nimport '../../providers/cognito/types/errors.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Lists registered credentials for an authenticated user\n *\n * @param {ListWebAuthnCredentialsInput} input The list input parameters including page size and next token.\n * @returns Promise<ListWebAuthnCredentialsOutput>\n * @throws - {@link AuthError}:\n * - Thrown when user is unauthenticated\n * @throws - {@link ListWebAuthnCredentialsException}\n * - Thrown due to a service error when listing WebAuthn credentials\n */\nasync function listWebAuthnCredentials(input) {\n    return listWebAuthnCredentials$1(Amplify, input);\n}\n\nexport { listWebAuthnCredentials };\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createListDevicesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createListDevicesClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Cognito Documentation for max device\n// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\nconst MAX_DEVICES = 60;\n/**\n * Fetches devices that have been remembered using {@link rememberDevice}\n * for the currently authenticated user.\n *\n * @returns FetchDevicesOutput\n * @throws {@link ListDevicesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function fetchDevices() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const listDevices = createListDevicesClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await listDevices({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.FetchDevices),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        Limit: MAX_DEVICES,\n    });\n    return parseDevicesResponse(response.Devices ?? []);\n}\nconst parseDevicesResponse = async (devices) => {\n    return devices.map(({ DeviceKey: id = '', DeviceAttributes = [], DeviceCreateDate, DeviceLastModifiedDate, DeviceLastAuthenticatedDate, }) => {\n        let deviceName;\n        const attributes = DeviceAttributes.reduce((attrs, { Name, Value }) => {\n            if (Name && Value) {\n                if (Name === 'device_name')\n                    deviceName = Value;\n                attrs[Name] = Value;\n            }\n            return attrs;\n        }, {});\n        const result = {\n            id,\n            name: deviceName,\n            attributes,\n            createDate: DeviceCreateDate\n                ? new Date(DeviceCreateDate * 1000)\n                : undefined,\n            lastModifiedDate: DeviceLastModifiedDate\n                ? new Date(DeviceLastModifiedDate * 1000)\n                : undefined,\n            lastAuthenticatedDate: DeviceLastAuthenticatedDate\n                ? new Date(DeviceLastAuthenticatedDate * 1000)\n                : undefined,\n        };\n        return result;\n    });\n};\n\nexport { fetchDevices };\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createForgotPasswordClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createForgotPasswordClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resets a user's password.\n *\n * @param input -  The ResetPasswordInput object.\n * @returns ResetPasswordOutput\n * @throws -{@link ForgotPasswordException }\n * Thrown due to an invalid confirmation code or password.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty username.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n **/\nasync function resetPassword(input) {\n    const { username } = input;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptyResetPasswordUsername);\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = authConfig;\n    const clientMetadata = input.options?.clientMetadata;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const forgotPassword = createForgotPasswordClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const res = await forgotPassword({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ResetPassword),\n    }, {\n        Username: username,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    });\n    const codeDeliveryDetails = res.CodeDeliveryDetails;\n    return {\n        isPasswordReset: false,\n        nextStep: {\n            resetPasswordStep: 'CONFIRM_RESET_PASSWORD_WITH_CODE',\n            codeDeliveryDetails: {\n                deliveryMedium: codeDeliveryDetails?.DeliveryMedium,\n                destination: codeDeliveryDetails?.Destination,\n                attributeName: codeDeliveryDetails?.AttributeName,\n            },\n        },\n    };\n}\n\nexport { resetPassword };\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens, assertDeviceMetadata } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createUpdateDeviceStatusClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateDeviceStatusClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Marks device as remembered while authenticated.\n *\n * @throws - {@link UpdateDeviceStatusException} - Cognito service errors thrown when\n * setting device status to remembered using an invalid device key.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function rememberDevice() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata();\n    assertDeviceMetadata(deviceMetadata);\n    const updateDeviceStatus = createUpdateDeviceStatusClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await updateDeviceStatus({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.RememberDevice),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        DeviceKey: deviceMetadata.deviceKey,\n        DeviceRememberedStatus: 'remembered',\n    });\n}\n\nexport { rememberDevice };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createListDevicesClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ListDevices'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createListDevicesClient };\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createGetUserAttributeVerificationCodeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserAttributeVerificationCodeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resends user's confirmation code when updating attributes while authenticated.\n *\n * @param input - The SendUserAttributeVerificationCodeInput object\n * @returns SendUserAttributeVerificationCodeOutput\n * @throws - {@link GetUserAttributeVerificationException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst sendUserAttributeVerificationCode = async (input) => {\n    const { userAttributeKey, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const clientMetadata = options?.clientMetadata;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const getUserAttributeVerificationCode = createGetUserAttributeVerificationCodeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { CodeDeliveryDetails } = await getUserAttributeVerificationCode({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SendUserAttributeVerificationCode),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        ClientMetadata: clientMetadata,\n        AttributeName: userAttributeKey,\n    });\n    const { DeliveryMedium, AttributeName, Destination } = {\n        ...CodeDeliveryDetails,\n    };\n    return {\n        destination: Destination,\n        deliveryMedium: DeliveryMedium,\n        attributeName: AttributeName,\n    };\n};\n\nexport { sendUserAttributeVerificationCode };\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createVerifySoftwareTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createVerifySoftwareTokenClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Verifies an OTP code retrieved from an associated authentication app.\n *\n * @param input - The VerifyTOTPSetupInput\n * @throws  -{@link VerifySoftwareTokenException }:\n * Thrown due to an invalid MFA token.\n * @throws  -{@link AuthValidationErrorCode }:\n * Thrown when `code` is not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function verifyTOTPSetup(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { code, options } = input;\n    assertValidationError(!!code, AuthValidationErrorCode.EmptyVerifyTOTPSetupCode);\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const verifySoftwareToken = createVerifySoftwareTokenClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await verifySoftwareToken({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.VerifyTOTPSetup),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        UserCode: code,\n        FriendlyDeviceName: options?.friendlyDeviceName,\n    });\n}\n\nexport { verifyTOTPSetup };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { createEmptyResponseDeserializer } from './shared/serde/createEmptyResponseDeserializer.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createForgetDeviceClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ForgetDevice'), createEmptyResponseDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createForgetDeviceClient };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createListWebAuthnCredentialsClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ListWebAuthnCredentials'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createListWebAuthnCredentialsClient };\n","import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../providers/cognito/utils/types.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport '@aws-amplify/core';\nimport { getRegionFromUserPoolId } from '../parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../common/AuthErrorStrings.mjs';\nimport '../../errors/types/validation.mjs';\nimport '../../providers/cognito/types/errors.mjs';\nimport { createListWebAuthnCredentialsClient } from '../factories/serviceClients/cognitoIdentityProvider/createListWebAuthnCredentialsClient.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nasync function listWebAuthnCredentials(amplify, input) {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await amplify.Auth.fetchAuthSession();\n    assertAuthTokens(tokens);\n    const listWebAuthnCredentialsResult = createListWebAuthnCredentialsClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { Credentials: commandCredentials = [], NextToken: nextToken } = await listWebAuthnCredentialsResult({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ListWebAuthnCredentials),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        MaxResults: input?.pageSize,\n        NextToken: input?.nextToken,\n    });\n    const credentials = commandCredentials.map(item => ({\n        credentialId: item.CredentialId,\n        friendlyCredentialName: item.FriendlyCredentialName,\n        relyingPartyId: item.RelyingPartyId,\n        authenticatorAttachment: item.AuthenticatorAttachment,\n        authenticatorTransports: item.AuthenticatorTransports,\n        createdAt: item.CreatedAt ? new Date(item.CreatedAt * 1000) : undefined,\n    }));\n    return {\n        credentials,\n        nextToken,\n    };\n}\n\nexport { listWebAuthnCredentials };\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../providers/cognito/utils/types.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../utils/getAuthUserAgentValue.mjs';\nimport { registerPasskey } from '../utils/passkey/registerPasskey.mjs';\nimport '../utils/passkey/errors.mjs';\nimport { assertValidCredentialCreationOptions } from '../utils/passkey/types/shared.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../common/AuthErrorStrings.mjs';\nimport '../../errors/types/validation.mjs';\nimport '../../providers/cognito/types/errors.mjs';\nimport { createStartWebAuthnRegistrationClient } from '../../foundation/factories/serviceClients/cognitoIdentityProvider/createStartWebAuthnRegistrationClient.mjs';\nimport { createCompleteWebAuthnRegistrationClient } from '../../foundation/factories/serviceClients/cognitoIdentityProvider/createCompleteWebAuthnRegistrationClient.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Registers a new passkey for an authenticated user\n *\n * @returns Promise<void>\n * @throws - {@link PasskeyError}:\n * - Thrown when intermediate state is invalid\n * @throws - {@link AuthError}:\n * - Thrown when user is unauthenticated\n * @throws - {@link StartWebAuthnRegistrationException}\n * - Thrown due to a service error retrieving WebAuthn registration options\n * @throws - {@link CompleteWebAuthnRegistrationException}\n * - Thrown due to a service error when verifying WebAuthn registration result\n */\nasync function associateWebAuthnCredential() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const startWebAuthnRegistration = createStartWebAuthnRegistrationClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { CredentialCreationOptions: credentialCreationOptions } = await startWebAuthnRegistration({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.StartWebAuthnRegistration),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    assertValidCredentialCreationOptions(credentialCreationOptions);\n    const cred = await registerPasskey(credentialCreationOptions);\n    const completeWebAuthnRegistration = createCompleteWebAuthnRegistrationClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await completeWebAuthnRegistration({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.CompleteWebAuthnRegistration),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        Credential: cred,\n    });\n}\n\nexport { associateWebAuthnCredential };\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createSetUserMFAPreferenceClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createSetUserMFAPreferenceClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates the MFA preference of the user.\n *\n * @param input - The UpdateMFAPreferenceInput object.\n * @throws -{@link SetUserMFAPreferenceException } - Service error thrown when the MFA preference cannot be updated.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function updateMFAPreference(input) {\n    const { sms, totp, email } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const setUserMFAPreference = createSetUserMFAPreferenceClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await setUserMFAPreference({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.UpdateMFAPreference),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        SMSMfaSettings: getMFASettings(sms),\n        SoftwareTokenMfaSettings: getMFASettings(totp),\n        EmailMfaSettings: getMFASettings(email),\n    });\n}\nfunction getMFASettings(mfaPreference) {\n    if (mfaPreference === 'DISABLED') {\n        return {\n            Enabled: false,\n        };\n    }\n    else if (mfaPreference === 'PREFERRED') {\n        return {\n            Enabled: true,\n            PreferredMfa: true,\n        };\n    }\n    else if (mfaPreference === 'ENABLED') {\n        return {\n            Enabled: true,\n        };\n    }\n    else if (mfaPreference === 'NOT_PREFERRED') {\n        return {\n            Enabled: true,\n            PreferredMfa: false,\n        };\n    }\n}\n\nexport { getMFASettings, updateMFAPreference };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createDeleteUserAttributesClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('DeleteUserAttributes'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createDeleteUserAttributesClient };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createResendConfirmationCodeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ResendConfirmationCode'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createResendConfirmationCodeClient };\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens, assertDeviceMetadata } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createForgetDeviceClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createForgetDeviceClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Forget a remembered device while authenticated.\n *\n * @param input - The ForgetDeviceInput object.\n * @throws - {@link ForgetDeviceException} - Cognito service errors thrown when\n * forgetting device with invalid device key\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function forgetDevice(input) {\n    const { device: { id: externalDeviceKey } = { id: undefined } } = input ?? {};\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata();\n    const currentDeviceKey = deviceMetadata?.deviceKey;\n    if (!externalDeviceKey)\n        assertDeviceMetadata(deviceMetadata);\n    const serviceForgetDevice = createForgetDeviceClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await serviceForgetDevice({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ForgetDevice),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        DeviceKey: externalDeviceKey ?? currentDeviceKey,\n    });\n    if (!externalDeviceKey || externalDeviceKey === currentDeviceKey)\n        await tokenOrchestrator.clearDeviceMetadata();\n}\n\nexport { forgetDevice };\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { toAttributeType } from '../utils/apiHelpers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createUpdateUserAttributesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateUserAttributesClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates user's attributes while authenticated.\n *\n * @param input - The UpdateUserAttributesInput object\n * @returns UpdateUserAttributesOutput\n * @throws - {@link UpdateUserAttributesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst updateUserAttributes = async (input) => {\n    const { userAttributes, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const clientMetadata = options?.clientMetadata;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const updateUserAttributesClient = createUpdateUserAttributesClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { CodeDeliveryDetailsList } = await updateUserAttributesClient({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.UpdateUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        ClientMetadata: clientMetadata,\n        UserAttributes: toAttributeType(userAttributes),\n    });\n    return {\n        ...getConfirmedAttributes(userAttributes),\n        ...getUnConfirmedAttributes(CodeDeliveryDetailsList),\n    };\n};\nfunction getConfirmedAttributes(attributes) {\n    const confirmedAttributes = {};\n    Object.keys(attributes)?.forEach(key => {\n        confirmedAttributes[key] = {\n            isUpdated: true,\n            nextStep: {\n                updateAttributeStep: 'DONE',\n            },\n        };\n    });\n    return confirmedAttributes;\n}\nfunction getUnConfirmedAttributes(codeDeliveryDetailsList) {\n    const unConfirmedAttributes = {};\n    codeDeliveryDetailsList?.forEach(codeDeliveryDetails => {\n        const { AttributeName, DeliveryMedium, Destination } = codeDeliveryDetails;\n        if (AttributeName)\n            unConfirmedAttributes[AttributeName] = {\n                isUpdated: false,\n                nextStep: {\n                    updateAttributeStep: 'CONFIRM_ATTRIBUTE_WITH_CODE',\n                    codeDeliveryDetails: {\n                        attributeName: AttributeName,\n                        deliveryMedium: DeliveryMedium,\n                        destination: Destination,\n                    },\n                },\n            };\n    });\n    return unConfirmedAttributes;\n}\n\nexport { updateUserAttributes };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUpdateUserAttributesClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('UpdateUserAttributes'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createUpdateUserAttributesClient };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createChangePasswordClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ChangePassword'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createChangePasswordClient };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createSetUserMFAPreferenceClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('SetUserMFAPreference'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createSetUserMFAPreferenceClient };\n","import { assertCredentialIsPkcWithAuthenticatorAttestationResponse } from './types/index.mjs';\nimport { deserializeJsonToPkcCreationOptions, serializePkcWithAttestationToJson } from './serde.mjs';\nimport { assertPasskeyError, PasskeyErrorCode, handlePasskeyRegistrationError } from './errors.mjs';\nimport { getIsPasskeySupported } from './getIsPasskeySupported.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Registers a new passkey for user\n * @param input - PasskeyCreateOptionsJson\n * @returns serialized PasskeyCreateResult\n */\nconst registerPasskey = async (input) => {\n    try {\n        const isPasskeySupported = getIsPasskeySupported();\n        assertPasskeyError(isPasskeySupported, PasskeyErrorCode.PasskeyNotSupported);\n        const passkeyCreationOptions = deserializeJsonToPkcCreationOptions(input);\n        const credential = await navigator.credentials.create({\n            publicKey: passkeyCreationOptions,\n        });\n        assertCredentialIsPkcWithAuthenticatorAttestationResponse(credential);\n        return serializePkcWithAttestationToJson(credential);\n    }\n    catch (err) {\n        throw handlePasskeyRegistrationError(err);\n    }\n};\n\nexport { registerPasskey };\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getMFATypes, getMFAType } from '../utils/signInHelpers.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createGetUserClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Fetches the preferred MFA setting and enabled MFA settings for the user.\n *\n * @returns FetchMFAPreferenceOutput\n * @throws  -{@link GetUserException} : error thrown when the service fails to fetch MFA preference\n * and settings.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function fetchMFAPreference() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const getUser = createGetUserClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { PreferredMfaSetting, UserMFASettingList } = await getUser({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.FetchMFAPreference),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    return {\n        preferred: getMFAType(PreferredMfaSetting),\n        enabled: getMFATypes(UserMFASettingList),\n    };\n}\n\nexport { fetchMFAPreference };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUpdateDeviceStatusClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('UpdateDeviceStatus'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createUpdateDeviceStatusClient };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createCompleteWebAuthnRegistrationClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('CompleteWebAuthnRegistration'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createCompleteWebAuthnRegistrationClient };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createConfirmForgotPasswordClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmForgotPassword'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createConfirmForgotPasswordClient };\n","import { Amplify } from '@aws-amplify/core';\nimport '@aws-amplify/core/internals/utils';\nimport '../../providers/cognito/utils/types.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../common/AuthErrorStrings.mjs';\nimport '../../errors/types/validation.mjs';\nimport '../../providers/cognito/types/errors.mjs';\nimport { deleteWebAuthnCredential as deleteWebAuthnCredential$1 } from '../../foundation/apis/deleteWebAuthnCredential.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Delete a registered credential for an authenticated user by credentialId\n * @param {DeleteWebAuthnCredentialInput} input The delete input parameters including the credentialId\n * @returns Promise<void>\n * @throws - {@link AuthError}:\n * - Thrown when user is unauthenticated\n * @throws - {@link DeleteWebAuthnCredentialException}\n * - Thrown due to a service error when deleting a WebAuthn credential\n */\nasync function deleteWebAuthnCredential(input) {\n    return deleteWebAuthnCredential$1(Amplify, input);\n}\n\nexport { deleteWebAuthnCredential };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createGetUserAttributeVerificationCodeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('GetUserAttributeVerificationCode'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createGetUserAttributeVerificationCodeClient };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createConfirmSignUpClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmSignUp'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createConfirmSignUpClient };\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createVerifyUserAttributeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createVerifyUserAttributeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Confirms a user attribute with the confirmation code.\n *\n * @param input -  The ConfirmUserAttributeInput object\n * @throws  -{@link AuthValidationErrorCode } -\n * Thrown when `confirmationCode` is not defined.\n * @throws  -{@link VerifyUserAttributeException } - Thrown due to an invalid confirmation code or attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmUserAttribute(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { confirmationCode, userAttributeKey } = input;\n    assertValidationError(!!confirmationCode, AuthValidationErrorCode.EmptyConfirmUserAttributeCode);\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const verifyUserAttribute = createVerifyUserAttributeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await verifyUserAttribute({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmUserAttribute),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        AttributeName: userAttributeKey,\n        Code: confirmationCode,\n    });\n}\n\nexport { confirmUserAttribute };\n","import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../providers/cognito/utils/types.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport '@aws-amplify/core';\nimport { getRegionFromUserPoolId } from '../parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../common/AuthErrorStrings.mjs';\nimport '../../errors/types/validation.mjs';\nimport '../../providers/cognito/types/errors.mjs';\nimport { createDeleteWebAuthnCredentialClient } from '../factories/serviceClients/cognitoIdentityProvider/createDeleteWebAuthnCredentialClient.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nasync function deleteWebAuthnCredential(amplify, input) {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await amplify.Auth.fetchAuthSession();\n    assertAuthTokens(tokens);\n    const deleteWebAuthnCredentialResult = createDeleteWebAuthnCredentialClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await deleteWebAuthnCredentialResult({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.DeleteWebAuthnCredential),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        CredentialId: input.credentialId,\n    });\n}\n\nexport { deleteWebAuthnCredential };\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { SETUP_TOTP_EXCEPTION } from '../types/errors.mjs';\nimport { getTOTPSetupDetails } from '../utils/signInHelpers.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport { createAssociateSoftwareTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createAssociateSoftwareTokenClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Sets up TOTP for the user.\n *\n * @returns SetUpTOTPOutput\n * @throws -{@link AssociateSoftwareTokenException}\n * Thrown if a service occurs while setting up TOTP.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n **/\nasync function setUpTOTP() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const username = tokens.idToken?.payload['cognito:username'] ?? '';\n    const associateSoftwareToken = createAssociateSoftwareTokenClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { SecretCode } = await associateSoftwareToken({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SetUpTOTP),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    if (!SecretCode) {\n        // This should never happen.\n        throw new AuthError({\n            name: SETUP_TOTP_EXCEPTION,\n            message: 'Failed to set up TOTP.',\n        });\n    }\n    return getTOTPSetupDetails(SecretCode, JSON.stringify(username));\n}\n\nexport { setUpTOTP };\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createResendConfirmationCodeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createResendConfirmationCodeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resend the confirmation code while signing up\n *\n * @param input -  The ResendSignUpCodeInput object\n * @returns ResendSignUpCodeOutput\n * @throws service: {@link ResendConfirmationException } - Cognito service errors thrown when resending the code.\n * @throws validation: {@link AuthValidationErrorCode } - Validation errors thrown either username are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function resendSignUpCode(input) {\n    const { username } = input;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignUpUsername);\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = authConfig;\n    const clientMetadata = input.options?.clientMetadata;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const resendConfirmationCode = createResendConfirmationCodeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { CodeDeliveryDetails } = await resendConfirmationCode({\n        region: getRegionFromUserPoolId(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ResendSignUpCode),\n    }, {\n        Username: username,\n        ClientMetadata: clientMetadata,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData,\n    });\n    const { DeliveryMedium, AttributeName, Destination } = {\n        ...CodeDeliveryDetails,\n    };\n    return {\n        destination: Destination,\n        deliveryMedium: DeliveryMedium,\n        attributeName: AttributeName\n            ? AttributeName\n            : undefined,\n    };\n}\n\nexport { resendSignUpCode };\n","export { signUp } from './providers/cognito/apis/signUp.mjs';\nexport { resetPassword } from './providers/cognito/apis/resetPassword.mjs';\nexport { confirmResetPassword } from './providers/cognito/apis/confirmResetPassword.mjs';\nexport { signIn } from './providers/cognito/apis/signIn.mjs';\nexport { resendSignUpCode } from './providers/cognito/apis/resendSignUpCode.mjs';\nexport { confirmSignUp } from './providers/cognito/apis/confirmSignUp.mjs';\nexport { confirmSignIn } from './providers/cognito/apis/confirmSignIn.mjs';\nexport { updateMFAPreference } from './providers/cognito/apis/updateMFAPreference.mjs';\nexport { fetchMFAPreference } from './providers/cognito/apis/fetchMFAPreference.mjs';\nexport { verifyTOTPSetup } from './providers/cognito/apis/verifyTOTPSetup.mjs';\nexport { updatePassword } from './providers/cognito/apis/updatePassword.mjs';\nexport { setUpTOTP } from './providers/cognito/apis/setUpTOTP.mjs';\nexport { updateUserAttributes } from './providers/cognito/apis/updateUserAttributes.mjs';\nexport { updateUserAttribute } from './providers/cognito/apis/updateUserAttribute.mjs';\nexport { getCurrentUser } from './providers/cognito/apis/getCurrentUser.mjs';\nexport { confirmUserAttribute } from './providers/cognito/apis/confirmUserAttribute.mjs';\nexport { signInWithRedirect } from './providers/cognito/apis/signInWithRedirect.mjs';\nexport { fetchUserAttributes } from './providers/cognito/apis/fetchUserAttributes.mjs';\nexport { signOut } from './providers/cognito/apis/signOut.mjs';\nexport { sendUserAttributeVerificationCode } from './providers/cognito/apis/sendUserAttributeVerificationCode.mjs';\nexport { deleteUserAttributes } from './providers/cognito/apis/deleteUserAttributes.mjs';\nexport { deleteUser } from './providers/cognito/apis/deleteUser.mjs';\nexport { rememberDevice } from './providers/cognito/apis/rememberDevice.mjs';\nexport { forgetDevice } from './providers/cognito/apis/forgetDevice.mjs';\nexport { fetchDevices } from './providers/cognito/apis/fetchDevices.mjs';\nexport { autoSignIn } from './providers/cognito/apis/autoSignIn.mjs';\nexport { decodeJWT, fetchAuthSession } from '@aws-amplify/core';\nimport './providers/cognito/credentialsProvider/IdentityIdStore.mjs';\nimport './providers/cognito/credentialsProvider/credentialsProvider.mjs';\nimport './providers/cognito/utils/refreshAuthTokens.mjs';\nimport '@aws-amplify/core/internals/utils';\nexport { AuthError } from './errors/AuthError.mjs';\nimport './providers/cognito/tokenProvider/errorHelpers.mjs';\nimport './providers/cognito/utils/types.mjs';\nimport './providers/cognito/tokenProvider/tokenProvider.mjs';\nimport '@aws-crypto/sha256-js';\nimport './errors/constants.mjs';\nimport './Errors.mjs';\nimport './common/AuthErrorStrings.mjs';\nimport './types/Auth.mjs';\nexport { associateWebAuthnCredential } from './client/apis/associateWebAuthnCredential.mjs';\nexport { listWebAuthnCredentials } from './client/apis/listWebAuthnCredentials.mjs';\nexport { deleteWebAuthnCredential } from './client/apis/deleteWebAuthnCredential.mjs';\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createDeleteUserAttributesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserAttributesClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Deletes user attributes.\n *\n * @param input -  The DeleteUserAttributesInput object\n * @throws  -{@link DeleteUserAttributesException } - Thrown due to invalid attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function deleteUserAttributes(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userAttributeKeys } = input;\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const deleteUserAttributesClient = createDeleteUserAttributesClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await deleteUserAttributesClient({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        UserAttributeNames: userAttributeKeys,\n    });\n}\n\nexport { deleteUserAttributes };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createStartWebAuthnRegistrationClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('StartWebAuthnRegistration'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createStartWebAuthnRegistrationClient };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createVerifyUserAttributeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('VerifyUserAttribute'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createVerifyUserAttributeClient };\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createConfirmForgotPasswordClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmForgotPasswordClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Confirms the new password and verification code to reset the password.\n *\n * @param input -  The ConfirmResetPasswordInput object.\n * @throws -{@link ConfirmForgotPasswordException }\n * Thrown due to an invalid confirmation code or password.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty confirmation code, password or username.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmResetPassword(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = authConfig;\n    const { username, newPassword } = input;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptyConfirmResetPasswordUsername);\n    assertValidationError(!!newPassword, AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword);\n    const code = input.confirmationCode;\n    assertValidationError(!!code, AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode);\n    const metadata = input.options?.clientMetadata;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const confirmForgotPassword = createConfirmForgotPasswordClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await confirmForgotPassword({\n        region: getRegionFromUserPoolId(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmResetPassword),\n    }, {\n        Username: username,\n        ConfirmationCode: code,\n        Password: newPassword,\n        ClientMetadata: metadata,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData,\n    });\n}\n\nexport { confirmResetPassword };\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createChangePasswordClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createChangePasswordClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates user's password while authenticated.\n *\n * @param input - The UpdatePasswordInput object.\n * @throws - {@link ChangePasswordException} - Cognito service errors thrown when updating a password.\n * @throws - {@link AuthValidationErrorCode} - Validation errors thrown when oldPassword or newPassword are empty.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function updatePassword(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { oldPassword, newPassword } = input;\n    assertValidationError(!!oldPassword, AuthValidationErrorCode.EmptyUpdatePassword);\n    assertValidationError(!!newPassword, AuthValidationErrorCode.EmptyUpdatePassword);\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const changePassword = createChangePasswordClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await changePassword({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.UpdatePassword),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        PreviousPassword: oldPassword,\n        ProposedPassword: newPassword,\n    });\n}\n\nexport { updatePassword };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createDeleteWebAuthnCredentialClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('DeleteWebAuthnCredential'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createDeleteWebAuthnCredentialClient };\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createForgotPasswordClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ForgotPassword'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createForgotPasswordClient };\n"],"names":["Amplify","assertTokenProviderConfig","AuthAction","HubInternal","assertValidationError","AuthValidationErrorCode","getRegionFromUserPoolId","getAuthUserAgentValue","getUserContextData","createConfirmSignUpClient","createCognitoUserPoolEndpointResolver","autoSignInStore","resetAutoSignIn","confirmSignUp","_x","_confirmSignUp","apply","arguments","_asyncToGenerator","input","username","confirmationCode","options","authConfig","getConfig","Auth","Cognito","userPoolId","userPoolClientId","userPoolEndpoint","clientMetadata","EmptyConfirmSignUpUsername","EmptyConfirmSignUpCode","UserContextData","confirmSignUpClient","endpointResolver","endpointOverride","Session","session","region","userAgentValue","ConfirmSignUp","Username","ConfirmationCode","ClientMetadata","ForceAliasCreation","forceAliasCreation","ClientId","Promise","resolve","reject","signUpOut","isSignUpComplete","nextStep","signUpStep","autoSignInStoreState","getState","active","dispatch","type","value","stopListener","listen","payload","event","data","error","updateUserAttributes","updateUserAttribute","_ref","userAttribute","attributeKey","output","userAttributes","Object","values","listWebAuthnCredentials","listWebAuthnCredentials$1","_listWebAuthnCredentials","fetchAuthSession","assertAuthTokens","createListDevicesClient","MAX_DEVICES","fetchDevices","_fetchDevices","tokens","listDevices","response","FetchDevices","AccessToken","accessToken","toString","Limit","parseDevicesResponse","Devices","devices","map","DeviceKey","id","DeviceAttributes","DeviceCreateDate","DeviceLastModifiedDate","DeviceLastAuthenticatedDate","deviceName","attributes","reduce","attrs","Name","Value","result","name","createDate","Date","undefined","lastModifiedDate","lastAuthenticatedDate","createForgotPasswordClient","resetPassword","_resetPassword","EmptyResetPasswordUsername","forgotPassword","res","ResetPassword","codeDeliveryDetails","CodeDeliveryDetails","isPasswordReset","resetPasswordStep","deliveryMedium","DeliveryMedium","destination","Destination","attributeName","AttributeName","assertDeviceMetadata","tokenOrchestrator","createUpdateDeviceStatusClient","rememberDevice","_rememberDevice","deviceMetadata","getDeviceMetadata","updateDeviceStatus","RememberDevice","deviceKey","DeviceRememberedStatus","composeServiceApi","cognitoUserPoolTransferHandler","createUserPoolSerializer","createUserPoolDeserializer","DEFAULT_SERVICE_CLIENT_API_CONFIG","config","createGetUserAttributeVerificationCodeClient","sendUserAttributeVerificationCode","userAttributeKey","forceRefresh","getUserAttributeVerificationCode","SendUserAttributeVerificationCode","createVerifySoftwareTokenClient","verifyTOTPSetup","_verifyTOTPSetup","code","EmptyVerifyTOTPSetupCode","verifySoftwareToken","VerifyTOTPSetup","UserCode","FriendlyDeviceName","friendlyDeviceName","createEmptyResponseDeserializer","createForgetDeviceClient","createListWebAuthnCredentialsClient","_x2","amplify","listWebAuthnCredentialsResult","Credentials","commandCredentials","NextToken","nextToken","ListWebAuthnCredentials","MaxResults","pageSize","credentials","item","credentialId","CredentialId","friendlyCredentialName","FriendlyCredentialName","relyingPartyId","RelyingPartyId","authenticatorAttachment","AuthenticatorAttachment","authenticatorTransports","AuthenticatorTransports","createdAt","CreatedAt","registerPasskey","assertValidCredentialCreationOptions","createStartWebAuthnRegistrationClient","createCompleteWebAuthnRegistrationClient","associateWebAuthnCredential","_associateWebAuthnCredential","startWebAuthnRegistration","CredentialCreationOptions","credentialCreationOptions","StartWebAuthnRegistration","cred","completeWebAuthnRegistration","CompleteWebAuthnRegistration","Credential","createSetUserMFAPreferenceClient","updateMFAPreference","_updateMFAPreference","sms","totp","email","setUserMFAPreference","UpdateMFAPreference","SMSMfaSettings","getMFASettings","SoftwareTokenMfaSettings","EmailMfaSettings","mfaPreference","Enabled","PreferredMfa","createDeleteUserAttributesClient","createResendConfirmationCodeClient","forgetDevice","_forgetDevice","device","externalDeviceKey","currentDeviceKey","serviceForgetDevice","ForgetDevice","clearDeviceMetadata","toAttributeType","createUpdateUserAttributesClient","updateUserAttributesClient","CodeDeliveryDetailsList","UpdateUserAttributes","UserAttributes","getConfirmedAttributes","getUnConfirmedAttributes","confirmedAttributes","keys","forEach","key","isUpdated","updateAttributeStep","codeDeliveryDetailsList","unConfirmedAttributes","createChangePasswordClient","assertCredentialIsPkcWithAuthenticatorAttestationResponse","deserializeJsonToPkcCreationOptions","serializePkcWithAttestationToJson","assertPasskeyError","PasskeyErrorCode","handlePasskeyRegistrationError","getIsPasskeySupported","isPasskeySupported","PasskeyNotSupported","passkeyCreationOptions","credential","navigator","create","publicKey","err","getMFATypes","getMFAType","createGetUserClient","fetchMFAPreference","_fetchMFAPreference","getUser","PreferredMfaSetting","UserMFASettingList","FetchMFAPreference","preferred","enabled","createConfirmForgotPasswordClient","deleteWebAuthnCredential","deleteWebAuthnCredential$1","_deleteWebAuthnCredential","createVerifyUserAttributeClient","confirmUserAttribute","_confirmUserAttribute","EmptyConfirmUserAttributeCode","verifyUserAttribute","ConfirmUserAttribute","Code","createDeleteWebAuthnCredentialClient","deleteWebAuthnCredentialResult","DeleteWebAuthnCredential","AuthError","SETUP_TOTP_EXCEPTION","getTOTPSetupDetails","createAssociateSoftwareTokenClient","setUpTOTP","_setUpTOTP","idToken","associateSoftwareToken","SecretCode","SetUpTOTP","message","JSON","stringify","resendSignUpCode","_resendSignUpCode","EmptySignUpUsername","resendConfirmationCode","ResendSignUpCode","signUp","confirmResetPassword","signIn","confirmSignIn","updatePassword","getCurrentUser","signInWithRedirect","fetchUserAttributes","signOut","deleteUserAttributes","deleteUser","autoSignIn","decodeJWT","_deleteUserAttributes","userAttributeKeys","deleteUserAttributesClient","DeleteUserAttributes","UserAttributeNames","_confirmResetPassword","newPassword","EmptyConfirmResetPasswordUsername","EmptyConfirmResetPasswordNewPassword","EmptyConfirmResetPasswordConfirmationCode","metadata","confirmForgotPassword","ConfirmResetPassword","Password","_updatePassword","oldPassword","EmptyUpdatePassword","changePassword","UpdatePassword","PreviousPassword","ProposedPassword"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]}